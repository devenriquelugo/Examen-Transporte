@model List<ExamenTransporte.Models.HistorialExamenViewModel>

@{
    ViewData["Title"] = "Historial de Exámenes";
}

<div class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-12 px-4">
    <div class="max-w-6xl mx-auto">
        <div class="text-center mb-12">
            <h1 class="text-4xl font-bold text-gray-800 mb-4">Historial de Exámenes</h1>
            <p class="text-lg text-gray-600">Revisa tus intentos anteriores y repasa tus respuestas</p>
        </div>

        @if (Model.Count == 0)
        {
            <div class="bg-white rounded-xl shadow-lg p-12 text-center">
                <svg class="w-20 h-20 text-gray-400 mx-auto mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
                <h3 class="text-2xl font-semibold text-gray-700 mb-4">No hay historial</h3>
                <p class="text-gray-600 mb-6">Aún no has realizado ningún examen</p>
                <a href="@Url.Action("Index", "Examen")" class="inline-block bg-[#2f6cd6] text-white px-8 py-3 rounded-lg hover:bg-blue-700 transition-colors font-semibold">
                    Realizar un Examen
                </a>
            </div>
        }
        else
        {
            <div class="grid md:grid-cols-2 gap-6">
                @foreach (var examen in Model)
                {
                    <div class="bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 p-6 border-2 border-transparent hover:border-[#2f6cd6]">
                        <div class="flex items-start justify-between mb-4">
                            <div class="flex-1">
                                <h3 class="text-xl font-bold text-gray-800 mb-2">@examen.TituloExamen</h3>
                                <div class="space-y-2">
                                    <div class="flex items-center text-sm text-gray-600">
                                        <svg class="w-5 h-5 mr-2 text-[#2f6cd6]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                                        </svg>
                                        <span><strong>@examen.TotalIntentos</strong> intento@(examen.TotalIntentos != 1 ? "s" : "")</span>
                                    </div>
                                    <div class="flex items-center text-sm text-gray-600">
                                        <svg class="w-5 h-5 mr-2 text-[#2f6cd6]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                        </svg>
                                        <span>Último intento: <strong>@examen.UltimoIntento.ToString("dd/MM/yyyy HH:mm")</strong></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <a href="@Url.Action("IntentosExamen", new { id = examen.ExamenId })"
                           class="block w-full mt-4 bg-[#2f6cd6] text-white text-center py-3 rounded-lg hover:bg-blue-700 transition-colors font-semibold">
                            Ver Intentos
                        </a>
                    </div>
                }
            </div>
        }

        <div class="mt-8 text-center">
            <a href="@Url.Action("Index", "Examen")" class="inline-block text-[#2f6cd6] hover:text-blue-700 font-medium text-lg">
                ← Volver a Exámenes
            </a>
        </div>
    </div>
</div>